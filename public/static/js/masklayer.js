var Kuaican = {}; Kuaican.extend = function (destination, source) { for (var property in source) { if (destination[property]) { continue; } destination[property] = source[property]; } return destination; }; Kuaican.getWindowWidth = function (objWindow) {if (objWindow.innerWidth) { return Math.min(objWindow.innerWidth, objWindow.document.documentElement.clientWidth); }else { return objWindow.document.documentElement.clientWidth; } }
Kuaican.getWindowHeight = function (objWindow) {if (objWindow.innerHeight) { return Math.min(objWindow.innerHeight, objWindow.document.documentElement.clientHeight); }else { return objWindow.document.documentElement.clientHeight; } }
Kuaican.getDocumentScrollTop = function (objDocument) { return Math.max(objDocument.documentElement.scrollTop, objDocument.body.scrollTop); }
Kuaican.getDocumentScrollLeft = function (objDocument) { return Math.max(objDocument.documentElement.scrollLeft, objDocument.body.scrollLeft); }
Kuaican.getDocumentWidth = function (objDocument) { return objDocument.documentElement.scrollWidth; }
Kuaican.getDocumentHeight = function (objDocument) { return objDocument.documentElement.scrollHeight; }
Kuaican.maxZIndex = function (objDocument) {var zIndex = 0; var visibleControls = ["iframe", "div", "span", "p", "pre", "blockquote", "fieldset", "legend", "table", "ul", "ol", "li", "dl", "dt", "dd", "a", "img", "button", "input", "label", "textarea", "select"]; for (var i = 0; i < visibleControls.length; i++) { var tagName = visibleControls[i]; var elements = objDocument.getElementsByTagName(tagName); for (var j = 0; j < elements.length; j++) { var element = elements[j]; if (element.style && element.style.zIndex) { if (parseInt(element.style.zIndex) > zIndex) { zIndex = 9991; } } } }return zIndex;}
Kuaican.BindEvent = function (element, type, listener) {if (window.addEventListener) { element.addEventListener(type, listener, false); }else if (window.attachEvent) { element.attachEvent('on' + type, listener); } }
Kuaican.userAgent = navigator.userAgent.toLowerCase(); Kuaican.uaMatch = function (ua) { ua = ua.toLowerCase(); var match = /(webkit)[ \/]([\w.]+)/.exec(ua) || /(opera)(?:.*version)?[ \/]([\w.]+)/.exec(ua) || /(msie) ([\w.]+)/.exec(ua) || !/compatible/.test(ua) && /(mozilla)(?:.*? rv:([\w.]+))?/.exec(ua) || []; return { browser: match[1] || "", version: match[2] || "0" }; }
Kuaican.browser = Kuaican.uaMatch(Kuaican.userAgent) || {}; function MaskPopup(param) { this.targetWindow = param["targetWindow"] || window; this.elementKey = new Array(); this.element = new Object(); this.style = new Object(); this.cssClass = new Object(); this.elementKey.push("maskSpan"); this.elementKey.push("maskDiv"); this.element["maskSpan"] = this.targetWindow.document.createElement("span"); this.element["maskDiv"] = this.targetWindow.document.createElement("div"); this.style["maskDiv"] = { opacity: 0.5, zIndex: 9990, backgroundColor: '#EEE', position: 'absolute', overflow: 'hidden' }; }
MaskPopup.prototype.setStyle = function () {this.element.maskDiv.style.zIndex = this.style["maskDiv"]["zIndex"]; this.element.maskDiv.style.position = this.style["maskDiv"]["position"]; this.element.maskDiv.style.backgroundColor = this.style["maskDiv"]["backgroundColor"]; this.element.maskDiv.style.overflow = this.style["maskDiv"]["overflow"]; if (typeof (this.element.maskDiv.style.opacity) == "undefined") { this.element.maskDiv.style.filter = "alpha(opacity=" + this.style["maskDiv"]["opacity"] * 100 + ")"; }
else { this.element.maskDiv.style.opacity = this.style["maskDiv"]["opacity"]; } }
MaskPopup.prototype.setSize = function () { this.element.maskDiv.style.width = Math.max(Kuaican.getWindowWidth(this.targetWindow), Kuaican.getDocumentWidth(this.targetWindow.document)) + "px"; this.element.maskDiv.style.height = Math.max(Kuaican.getWindowHeight(this.targetWindow), Kuaican.getDocumentHeight(this.targetWindow.document)) + "px"; }
MaskPopup.prototype.setPosition = function () { this.element.maskDiv.style.left = "0px"; this.element.maskDiv.style.top = "0px"; }
MaskPopup.prototype.build = function () {if (Kuaican.browser.msie && parseInt(Kuaican.browser.version) <= 6) { var html = "<iframe src=\"\" style=\"z-index:-1;background-color:transparent;width:100%;height:100%\"></iframe>"; this.element.maskDiv.insertAdjacentHTML("beforeEnd", html); } this.element.maskSpan.appendChild(this.element.maskDiv); this.targetWindow.document.body.appendChild(this.element.maskSpan);}
MaskPopup.prototype.bindEvent = function () { var me = this; Kuaican.BindEvent(this.targetWindow, "resize", function () { me.setSize(); }); }
MaskPopup.prototype.show = function () { this.setSize(); this.setStyle(); this.build(); this.setPosition(); this.bindEvent(); }
MaskPopup.prototype.close = function () {try { this.targetWindow.document.body.removeChild(this.element.maskSpan); }catch (e){ } }
function LoadPopup(param) { this.targetWindow = param["targetWindow"] || window; this.element = new Object(); this.style = new Object(); this.element["maskImg"] = this.targetWindow.document.createElement("img"); this.style["maskImg"] = { zIndex: Kuaican.maxZIndex(this.targetWindow.document) + 2, position: 'absolute' }; }
LoadPopup.prototype.setStyle = function () { this.element.maskImg.style.zIndex = this.style["maskImg"]["zIndex"]; this.element.maskImg.style.position = this.style["maskImg"]["position"]; }
LoadPopup.prototype.setSrc = function () { this.element["maskImg"].setAttribute("src", "http://www.dinsong.com/image/FadingLine.gif"); }
LoadPopup.prototype.setPosition = function () {var availWidth = Kuaican.getWindowWidth(this.targetWindow); var availLeft = 0; if (availWidth - 64 > 0) { availLeft = (availWidth - 64) / 2 + Kuaican.getDocumentScrollLeft(this.targetWindow.document); }  this.element.maskImg.style.left = availLeft + "px"; var availHeight = Kuaican.getWindowHeight(this.targetWindow); var availTop = 0; if (availHeight - 64 > 0) { availTop = (availHeight - 64) / 2 + Kuaican.getDocumentScrollTop(this.targetWindow.document); } this.element.maskImg.style.top = availTop + "px";}
LoadPopup.prototype.build = function () { this.targetWindow.document.body.appendChild(this.element.maskImg); }
LoadPopup.prototype.show = function () { this.setSrc(); this.setStyle(); this.build(); this.setPosition(); }
LoadPopup.prototype.close = function () {try { this.targetWindow.document.body.removeChild(this.element.maskImg); } catch (e){ } }
LoadPopup.prototype.hidden = function () { this.element["maskImg"].style.display = "none"; }
LoadPopup.prototype.display = function () { this.element["maskImg"].style.display = ""; }
function MaskLayer(window) { this._ctor(window); }; MaskLayer.prototype = { mask: null, window: null, load: null, _ctor: function (window) { this.window = window; }, open: function (showLoad) { if (this.mask) this.close(); this.mask = new MaskPopup({ targetWindow: this.window }); this.mask.show(); if (showLoad) { this.load = new LoadPopup({ targetWindow: this.window }); this.load.show(); } }, close: function () { this.mask.close(); if (this.load) this.load.close(); } };
var mask = new MaskLayer(window); // object reference
